#ifndef __BOARD_CONFIG_H__
#define __BOARD_CONFIG_H__

//
// Memory Map Constant
//
#define DRAM_START_ADDR			0x20000000
#define DRAM_END_ADDR				0x40000000

// Application Image
#define APP_IMAGE_DOWN_ADDR		(DRAM_START_ADDR)							// 0x2000_0000
#define APP_IMAGE_SIZE				(MB(128))									// 128[MB]
#define APP_IMAGE_END_ADDR		(APP_IMAGE_DOWN_ADDR+APP_IMAGE_SIZE)	// 0x2800_0000

// Non-Cachable Non-Bufferable, DMA Region
#define OTHER_NCNB_START_ADDR	(APP_IMAGE_END_ADDR)						// 0X2800_0000
#define OTHER_NCNB_SIZE			(OTHER_NCNB_END_ADDR-OTHER_NCNB_START_ADDR)		// 288[MB]
#define OTHER_NCNB_END_ADDR		(LCD_FB_START_ADDR)						// 0X3A00_0000

// LCD Frame Buffer
#define LCD_FB0_SIZE			 		(MB(16))		// 16[MB]
#define LCD_FB1_SIZE					(MB(16))		// 16[MB]
#define LCD_FB2_SIZE					(MB(16))		// 16[MB]
#define LCD_FB3_SIZE					(MB(16))		// 16[MB]
#define LCD_FB4_SIZE					(MB(16))		// 13[MB]
#define LCD_FB_TOTAL_SIZE	 		(MB(80))		// 80[MB]
#define LCD_FB_SIZE_ALIGN			(MB(16))		// 16[MB]

#define LCD_FB_START_ADDR			(DRAM_END_ADDR - 6*LCD_FB_SIZE_ALIGN)		// 0x3A00_0000
//#define LCD_FB0_START_ADDR		0x3A444442						// 0x3A00_0000
#define LCD_FB0_START_ADDR		(LCD_FB_START_ADDR)						// 0x3A00_0000
#define LCD_FB1_START_ADDR		(LCD_FB0_START_ADDR + LCD_FB0_SIZE)		// 0x3B00_0000
#define LCD_FB2_START_ADDR		(LCD_FB1_START_ADDR + LCD_FB1_SIZE)		// 0x3C00_0000
#define LCD_FB3_START_ADDR		(LCD_FB2_START_ADDR + LCD_FB2_SIZE)		// 0x3D00_0000
#define LCD_FB4_START_ADDR		(LCD_FB3_START_ADDR + LCD_FB3_SIZE)		// 0x3E00_0000
#define LCD_FB_END_ADDR			(LCD_FB4_START_ADDR + LCD_FB4_SIZE)		// 0x3F00_0000

// Camera I/F Buffer
#define CAM_BUF0_SIZE				(MB(3))										// 3[MB]
#define CAM_BUF1_SIZE				(MB(3))										// 3[MB]
#define CAM_BUF2_SIZE				(MB(3))										// 3[MB]
#define CAM_BUF3_SIZE				(MB(3))										// 3[MB]
#define CAM_BUF_TOTAL_SIZE			(MB(12))									// 12[MB]
#define CAM_BUF_START_ADDR		(LCD_FB_END_ADDR)							// 0x3F00_0000
#define CAM_BUF0_START_ADDR		(CAM_BUF_START_ADDR)						// 0x3F00_0000
#define CAM_BUF1_START_ADDR		(CAM_BUF0_START_ADDR + CAM_BUF0_SIZE)	// 0x3F30_0000
#define CAM_BUF2_START_ADDR		(CAM_BUF1_START_ADDR + CAM_BUF1_SIZE)	// 0X3F60_0000
#define CAM_BUF3_START_ADDR		(CAM_BUF2_START_ADDR + CAM_BUF2_SIZE)	// 0X3F90_0000
#define CAM_BUF_END_ADDR			(CAM_BUF3_START_ADDR + CAM_BUF3_SIZE)	// 0X3FC0_0000

// MMU Translation Table
#define MMU_PAGE_TABLE_SIZE		(MB(1))			/* 16[KB] <=> For 1[MB] Section Unit Mapping, thus allocate 1[MB](One Section) */
#define MMU_PAGE_TABLE_BASE		(DRAM_END_ADDR-MMU_PAGE_TABLE_SIZE)	// 0x3FF0_0000

// Stack
#define SVC_STACK_SIZE				(KB(16))			// 16[KB]
#define IRQ_STACK_SIZE				(KB(16))			// 16[KB]
#define FIQ_STACK_SIZE				(KB(1))			// 1[KB]
#define ABORT_STACK_SIZE			(KB(1))			// 1[KB]
#define UNDEF_STACK_SIZE			(KB(1))			// 1[KB]
#define USER_STACK_SIZE			(KB(1))			// 1[KB]

#define SVC_STACK_BASE				(DRAM_END_ADDR - MMU_PAGE_TABLE_SIZE)	// 0x3FF0_0000
#define IRQ_STACK_BASE				(SVC_STACK_BASE -SVC_STACK_SIZE)			// 0x3FEF_C000
#define FIQ_STACK_BASE				(IRQ_STACK_BASE -IRQ_STACK_SIZE)			// 0x3FEF_8000
#define ABORT_STACK_BASE			(FIQ_STACK_BASE -FIQ_STACK_SIZE)			// 0x3FEF_7C00
#define UNDEF_STACK_BASE			(ABORT_STACK_BASE -ABORT_STACK_SIZE)	// 0x3FEF_F000
#define SYS_STACK_BASE				(UNDEF_STACK_BASE -UNDEF_STACK_SIZE)	// 0x3FEF_7800

#define STACK_START_ADDR			(SVC_STACK_BASE)							// 0x3FF0_0000
#define STACK_END_ADDR			(SYS_STACK_BASE - USER_STACK_SIZE)		// 0x3FEF_7400

#define STACK_SECT_START_ADDR	(CAM_BUF_END_ADDR)						// 0x3FC0_0000
#define STACK_SECT_END_ADDR		(MMU_PAGE_TABLE_BASE)						// 0x3FF0_0000

// Level-2 USB Boot Loader Download Address
#define BL2_IMAGE_DOWN_ADDR		(CAM_BUF_START_ADDR)						// 0x3F00_0000

#endif
